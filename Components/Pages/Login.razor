@page "/login"
@using MMS.Models.ViewModels
@using System.Security.Claims
@using MMS.Services
@using MMS.Services.Responses
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@inject NavigationManager NavigationManager
@inject ILoginService LoginService

<PageTitle>MMS - Prijava</PageTitle>
<h3>Prijava</h3>

<RadzenCard Class="rz-background-color-info-lighter">
	<RadzenRow>
		<div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
			<EditForm Model="@Model" OnValidSubmit="ValidSubmit" OnInvalidSubmit="InvalidSubmit" FormName="LoginForm">
				<DataAnnotationsValidator />
				<div class="mb-3 text-center flex-column">
					<h3>Prijava</h3>
				</div>
				<div class="mb-3">
					<label>Email</label>
					<InputText @bind-Value="Model.Email" class="form-control" placeholder="Email" />
					<ValidationMessage For="() => Model.Email" />
				</div>
				<div class="mb-3">
					<label>Lozinka</label>
					<InputText @bind-Value="Model.Password" class="form-control" placeholder="Password" />
					<ValidationMessage For="() => Model.Password" />
				</div>
				<div class="mb-3 text-center">
					<span class="text-danger">@error</span>
				</div>
				<div class="mb-3 d-grip gap-2">
					<button type="submit" class="btn btn-primary">Prijavi se</button>
				</div>
			</EditForm>
		</div>
	</RadzenRow>
</RadzenCard>

<RadzenText>Nemate račun? <a href="/membership-request">Pošaljite <span style="font-style: italic;">Zahtjev za članstvom</span>.</a></RadzenText>

@code {
	[CascadingParameter]
	public HttpContext? HttpContext { get; set; }

	[SupplyParameterFromForm]
	public LoginViewModel Model { get; set; } = new();

	private string? error = "";

	private void InvalidSubmit()
	{
		error = "Unesi sva polja.";
	}

	private async Task ValidSubmit()
	{
		LoginServiceResponse response = await LoginService.Login(HttpContext, Model);
		if (response.Flag)
		{
			if (response.Role == "Admin")
			{
				NavigationManager.NavigateTo("/admin");
			} else
			{
				NavigationManager.NavigateTo("/");
			}
		} else
		{
			error = response.Message;
		}
	}
}
