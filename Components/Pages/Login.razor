@page "/login"
@using MMS.Models.ViewModels
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@inject NavigationManager NavigationManager

<div class="row">
	<div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
		<EditForm Model="@Model" OnValidSubmit="ValidSubmit" OnInvalidSubmit="InvalidSubmit" FormName="LoginForm">
			<DataAnnotationsValidator />
			<div class="mb-3 text-center flex-column">
				<h3>Prijava</h3>
			</div>
			<div class="mb-3">
				<label>Email</label>
				<InputText @bind-Value="Model.Email" class="form-control" placeholder="Email" />
				<ValidationMessage For="() => Model.Email" />
			</div>
			<div class="mb-3">
				<label>Lozinka</label>
				<InputText @bind-Value="Model.Password" class="form-control" placeholder="Password" />
				<ValidationMessage For="() => Model.Password" />
			</div>
			<div class="mb-3 text-center">
				<span class="text-danger">@error</span>
			</div>
			<div class="mb-3 d-grip gap-2">
				<button type="submit" class="btn btn-primary">Prijavi se</button>
			</div>
		</EditForm>
	</div>
</div>

@code {
	[CascadingParameter]
	public HttpContext? HttpContext { get; set; }

	[SupplyParameterFromForm]
	public LoginViewModel Model { get; set; } = new();

	private string? error = "";

	private void InvalidSubmit()
	{
		error = "Unesi sva polja.";
	}

	private async Task ValidSubmit()
	{
		string correctEmail = "admin";
		string correctPassword = "admin";

		if (Model.Email != correctEmail || Model.Password != correctPassword)
		{
			error = "Pogrešan email ili lozinka.";
			return;
		}

		await Authenticate();
	}

	private async Task Authenticate()
	{
		var claims = new List<Claim>
		{
			new Claim(ClaimTypes.Name, Model.Email),
			new Claim(ClaimTypes.Role, "Admin")
		};

		var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
		var principal = new ClaimsPrincipal(identity);
		await HttpContext.SignInAsync(principal);
		NavigationManager.NavigateTo("/");
	}
}
