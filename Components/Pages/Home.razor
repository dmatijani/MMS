@page "/"
@using MMS.Components.Reusable
@using Radzen
@using MMS.Data.Repositories
@using MMS.Models
@using System.Security.Claims
@using MMS.Services
@inject NavigationManager NavigationManager
@inject IUserService UserService
@inject NavigationManager NavigationManager

<PageTitle>MMS</PageTitle>

<TopTitle Title="MMS" BigTitle="true">
	<AuthorizeView>
		<NotAuthorized>
		<RadzenStack AlignItems="AlignItems.Center">
			<RadzenText TextStyle="TextStyle.H6" style="margin-bottom: 30px;">Dobrodošli u sustav MMS! Ako nemate račun, možete poslati <span style="font-style: italic;">Zahtjev za članstvom</span>.</RadzenText>
			<RadzenRow JustifyContent="JustifyContent.Center" Gap="6rem">
				<RadzenStack AlignItems="AlignItems.Center" Gap="2rem">
					<RadzenText>Imam račun!</RadzenText>
					<a href="/login"><RadzenButton style="width: 200px;">Prijava</RadzenButton></a>
				</RadzenStack>
				<RadzenStack AlignItems="AlignItems.Center" Gap="2rem">
					<RadzenText>Nemam račun!</RadzenText>
					<a href="/membership-request"><RadzenButton style="width: 200px;">Sastavi zahtjev</RadzenButton></a>
				</RadzenStack>
			</RadzenRow>
		</RadzenStack>
		</NotAuthorized>
		<Authorized>
			<RadzenStack AlignItems="AlignItems.Center">
				<RadzenText TextStyle="TextStyle.H6">Hej, <b>@context.User.Identity?.Name</b>! Prijavljeni ste u sustav.</RadzenText>
				<RadzenRow JustifyContent="JustifyContent.Center" Gap="6rem">
					<RadzenStack AlignItems="AlignItems.Center" Gap="2rem">
						<RadzenText>Želim na svoj profil.</RadzenText>
						<a href="/profile"><RadzenButton style="width: 200px;">Profil</RadzenButton></a>
					</RadzenStack>
					<RadzenStack AlignItems="AlignItems.Center" Gap="2rem">
						<RadzenText>Želim se odjaviti.</RadzenText>
						<a href="/logout"><RadzenButton style="width: 200px;">Odjava</RadzenButton></a>
					</RadzenStack>
				</RadzenRow>
			</RadzenStack>
		</Authorized>
	</AuthorizeView>
</TopTitle>

@code {
	[CascadingParameter]
	private Task<AuthenticationState> authenticationState { get; set; }

	protected override async Task OnInitializedAsync()
	{
		var state = await authenticationState;
		if (state != null)
		{
			if (state.User.IsInRole("Admin"))
			{
				NavigationManager.NavigateTo("/admin");
			}
		}

		await UserService.AddAdminUser();
	}
}